# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# see https://github.com/zdharma-contiuum/ziniT/issues/406
# this is before zinit because it throws an error. could also just ignore the error...
# and because this must be done before we source zinit, we have to use the full path. this path only works if
# starship is installed with the sbin ice.
# [[ -x ~/.zinit/polaris/bin/starship ]] && eval "$(~/.zinit/polaris/bin/starship init zsh)"

if [[ -d ~/.zinit/bin/zmodules/Src ]]; then
  module_path+=("$HOME/.zinit/bin/zmodules/Src")
  zmodload zdharma/zplugin
fi

HISTFILE=~/.histfile
HIST_STAMPS="mm/dd/yyyy"
HISTSIZE=999999999
SAVEHIST=$HISTSIZE

# these are the ones set by omz, i think
setopt alwaystoend autocd autopushd
setopt completeinword extendedhistory noflowcontrol
setopt histexpiredupsfirst histignoredups histignorespace
setopt histverify incappendhistory interactive
setopt interactivecomments login longlistjobs
setopt monitor multios pathdirs
setopt promptsubst pushdignoredups pushdminus
setopt sharehistory zle

autoload -Uz bashcompinit
bashcompinit
autoload -U select-word-style
select-word-style bash

zmodload zsh/langinfo
zmodload -i zsh/complist

export LANG=en_US.UTF-8
# export EDITOR='/usr/bin/nvim'
# TODO: set the editor based on what exists. Try lvim first, then vim, then vi... or something
export EDITOR='/home/me/.local/bin/lvim'

### Path Stuff ###
PATH="$HOME/.poetry/bin:$HOME/.rbenv/bin:$HOME/.pyenv/bin:$HOME/.local/bin:$HOME/bin:$HOME/go/bin:$HOME/.npm-packages/bin:$PATH"
# unique the path i.e. no duplicate entries. stole this from so somewhere -> this is now done at the bottom of this file
source "$HOME/.cargo/env"
if [[ ! -f /home/me/.bni/develop.rc ]]; then
  ## python env
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"

  ## ruby env
  eval "$(rbenv init -)"
fi
# deduplication now happens at the end of this script
### Path Stuff ###

# Uncomment the following line if you don't like systemctl's auto-paging feature:
export SYSTEMD_PAGER=

# set dircolors to solarized
eval "$(dircolors /home/me/dev/dircolors-solarized/dircolors.256dark)"

### Plugins ###
# disable the virtual env prompt change
export VIRTUAL_ENV_DISABLE_PROMPT=1

# man will use bat - so pretty
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MANROFFOPT="-c"
export BAT_THEME='Solarized (dark)'

export CLOUDSDK_PYTHON=python3.8

# puts the messages after the command
export YSU_MESSAGE_POSITION="after"

# zsh-autosugges config(this comes from the zsh-users+fast meta group above)
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#255460,bold,underline"
export ZSH_AUTOSUGGEST_STRATEGY=(completion history match_prev_cmd)

# skim settings
# export SKIM_DEFAULT_COMMAND="fd --type f || git ls-tree -r --name-only HEAD || rg --files || find ."
export SKIM_DEFAULT_COMMAND='fd -uu $PWD'
# export SKIM_CTRL_T_COMMAND='fd -uu . $PWD'
# export SKIM_ALT_C_COMMAND='fd -t d -uu . $HOME'
unset SKIM_CTRL_T_COMMAND
unset SKIM_ALT_C_COMMAND
# export SKIM_DEFAULT_OPTIONS="\
#   --color=16 \
#   --reverse \
#   --inline-info \
#   --no-multi \
#   --cycle \
#   --height ${SKIM_TMUX_HEIGHT:-40%} \
#   --tiebreak=index \
#   --preview-window=:hidden \
#   --preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -L 2 -a -C {} | less || echo {} 2> /dev/null | head -200))' \
#   --bind '?:toggle-preview'
#   "

## Configuration for the fzf-tab plugin
# see: https://github.com/Aloxaf/fzf-tab/wiki/Configuration
#
# use the tmux popup stuff, tmux 3.2 or greater
# currently this is being built from source, tag 3.2, and is in ~/.local/.bin
# zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
# set descriptions format to enable group support
# zstyle ':completion:*:descriptions' format '[%d]'
# preview with exa
zstyle ':fzf-tab:*' fzf-command sk
zstyle ':fzf-tab:complete:cd:*' fzf-command 'skim-cd-widget'
# zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -u -1 --color=always $realpath'
# zstyle ':fzf-tab:*' fzf-preview 'exa -u -1 --color=always $realpath'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
### Plugins ###

### Aliases ###
alias vi="$EDITOR"
alias vim="$EDITOR"
alias _l='exa -lhs modified --color-scale'
alias l='_l -TL1'
alias ll='_l -TL2'
alias lll='_l -TL3'
alias _L='_l -agTL'
alias L='_L 1'
alias LL='_L 2'
alias LLL='_L 3'
alias fd='fd -IH'
# alias gsutil='gsutil -m'

alias k='kubectl'
alias tmux_capture='tmux capture-pane -pS - > tmux_history.out'

alias ssh='TERM=xterm-256color ssh'
### Aliases ###

### Functions ###
update-all() {
  # Nvim plug update and CocUpdate - CocUpdateSync is used so we wait to close and stuff
  # vim +CocUpdateSync +PlugUpgrade +PlugUpdate +qall || echo 'problem updating vim/coc'
  vim +PackerClean +PackerSync +PackerUpdate +qall || echo 'problem updating packer'
  vim +LvimUpdate +TSUpdate +qall || echo 'problem updating lvim and treeitter stuff'

  # zinit - replaces zplug
  zinit self-update
  zinit update --all -p 20 || echo 'problem updating zinit and plugins'

  # tpm - tmux
  ~/.tmux/plugins/tpm/bin/update_plugins all || echo 'problem updating tpm/tmux plugins'

  # update all binaries installed by cargo
  # cargo install alacritty bat exa fd-find(fd) skim ripgrep fnm sccache starship
  # cargo install $(cargo install --list | rg -or '$1' '^(.*) ' | xargs)

  flatpak update -y

  # system update
  if type -f dnf; then
    sudo dnf upgrade -y || echo 'problem with dnf upgrade'
  elif type -f apt; then
    sudo apt autoremove -y
    sudo apt update -y
    sudo apt dist-upgrade -y
  fi
}

# this will set the _VIRTUAL_ENV for tmux to display
function preexec {
  if [ -n "$TMUX" ]; then
    tmux setenv -u _VIRTUAL_ENV
    [ -n "$VIRTUAL_ENV" ] && tmux setenv _VIRTUAL_ENV "$VIRTUAL_ENV"
  fi
}

moon_latest() {
  curl -OJL https://oryx.zsa.io/7B5MA/latest/binary > /tmp/latest_moonlander.bin
  wally-cli /tmp/latest_moonlander.bin
}

### zinit ###
source "$HOME/.zinit.doit"
### Functions ###

source "$HOME/perl5/perlbrew/etc/bashrc"
# deduplicates the path. putting it at the bottom so it catches more stuff? might break some shiz...
export PATH=$(printf $PATH | awk -v RS=: '!($0 in a) {a[$0]; printf("%s%s", length(a) > 1 ? ":" : "", $0)}')

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source "$HOME/.p10k.zsh"
